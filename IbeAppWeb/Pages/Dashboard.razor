@page "/dashboard"  
@using IbeAppWeb.DTOs.Umsatz  
@using static System.Net.WebRequestMethods  
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids  
@using Syncfusion.Blazor.Charts  
@using Syncfusion.Blazor.Navigations
@using IbeAppWeb.Services
@inject UmsatzService UmsatzService

<h2 class="text-2xl font-bold mb-4">Umsatz-Dashboard</h2>  

@if (dashboardData is null)  
{  
    <p>Lade Daten...</p>  
}  
else  
{ 
    <div class="mb-4 font-semibold">  
        Gesamtumsatz aller Projekte: <span style="color:green">€@dashboardData.GesamtumsatzAllProjects.ToString("N2")</span>  
    </div>  
    <SfChart Title="Umsatz je Projekt" >  
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Projekt" />  
        <ChartPrimaryYAxis Title="Umsatz (€) " LabelFormat="N2" />  
        <ChartSeriesCollection>  
            <ChartSeries DataSource="@dashboardData.Projects"  
                         XName="ProjectName"  
                         YName="Gesamtumsatz"  
                         Type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Format="N2"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>  
    </SfChart>  

        <div class="grid-container">
            <div class="grid-half">
                <h3>Monteur Umsatz</h3>
                <SfGrid DataSource="@monteurData" AllowPaging="true" AllowSorting="true" ShowColumnChooser="true">
                    <GridPageSettings PageCount="5" PageSizes="true" PageSize="5"></GridPageSettings>
                    <GridColumns>  
                        <GridColumn Field="ProjectName" HeaderText="Projekt" Width="150" />  
                        <GridColumn Field="Monteur" HeaderText="Monteur" Width="200" />
                    <GridColumn Field="Gesamtumsatz" HeaderText="Umsatz (€) " Format="N2" Type="Syncfusion.Blazor.Grids.ColumnType.Decimal" TextAlign="TextAlign.Right" Width="150" />
                </GridColumns>  
                </SfGrid>  
            </div>
            <div class="grid-half">
                <h3>Fahrzeug Umsatz</h3>
                <SfGrid DataSource="@fahrzeugData" AllowPaging="true" AllowSorting="true">
                    <GridPageSettings PageCount="5" PageSizes="true" PageSize="5"></GridPageSettings>
                    <GridColumns>  
                        <GridColumn Field="ProjectName" HeaderText="Projekt" Width="150" />  
                        <GridColumn Field="Fahrzeug" HeaderText="Fahrzeug" Width="200" />
                    <GridColumn Field="Gesamtumsatz" HeaderText="Umsatz (€) " Format="N2" Type="Syncfusion.Blazor.Grids.ColumnType.Decimal" TextAlign="TextAlign.Right" Width="150" />
                </GridColumns>  
                </SfGrid>    
            </div>
        </div>
}  
<style>
    .grid-container {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        margin-top: 1.5rem;
    }

    .grid-half {
        flex: 1 1 48%;
        min-width: 350px;
    }
</style>

@code {
        private AllProjectsUmsatzSplitDto? dashboardData;
        private List<ProjektUmsatzDto> projektDaten = new();
        private List<MonteurUmsatzDto> monteurData = new();
        private List<FahrzeugUmsatzDto> fahrzeugData = new();


        private List<string> projektNamen = new();
        private List<string> monteurNamen = new();
        private List<string> fahrzeugNamen = new();


        private bool SidebarToggle { get; set; } = false;

        protected override async Task OnInitializedAsync()
        {
            DateTime start = DateTime.Parse("1.3.2025");
            DateTime end = DateTime.Parse("31.5.2025");
            dashboardData = await UmsatzService.GetProjectsUmsatzSplit(start, end);

            if (dashboardData != null)
            {
                projektDaten = dashboardData.Projects;
                monteurData = projektDaten.SelectMany(p => p.MonteurUmsaetze).ToList();
                fahrzeugData = projektDaten.SelectMany(p => p.FahrzeugUmsaetze).ToList();

            }
        }

}
